Terminals unused in grammar

    BREAK
    DO
    SWITCH
    DEFAULT
    GOTO
    CHAR
    DOUBLE
    CASE
    CONTINUE
    COLON


Grammar

    0 $accept: program $end

    1 program: program unit
    2        | unit

    3 unit: var_declaration
    4     | func_definition

    5 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement
    6                | type_specifier ID LPAREN RPAREN compound_statement

    7 parameter_list: parameter_list COMMA type_specifier ID
    8               | parameter_list COMMA type_specifier
    9               | type_specifier ID
   10               | type_specifier

   11 compound_statement: LCURL statements RCURL
   12                   | LCURL RCURL

   13 var_declaration: type_specifier declaration_list SEMICOLON

   14 type_specifier: INT
   15               | FLOAT
   16               | VOID

   17 declaration_list: declaration_list COMMA ID
   18                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   19                 | ID
   20                 | ID LTHIRD CONST_INT RTHIRD

   21 statements: statement
   22           | statements statement

   23 statement: var_declaration
   24          | expression_statement
   25          | compound_statement
   26          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   27          | IF LPAREN expression RPAREN statement
   28          | IF LPAREN expression RPAREN statement ELSE statement
   29          | WHILE LPAREN expression RPAREN statement
   30          | PRINTF LPAREN ID RPAREN SEMICOLON
   31          | RETURN expression SEMICOLON

   32 expression_statement: SEMICOLON
   33                     | expression SEMICOLON

   34 variable: ID
   35         | ID LTHIRD expression RTHIRD

   36 expression: logic_expression
   37           | variable ASSIGNOP logic_expression

   38 logic_expression: rel_expression
   39                 | rel_expression LOGICOP rel_expression

   40 rel_expression: simple_expression
   41               | simple_expression RELOP simple_expression

   42 simple_expression: term
   43                  | simple_expression ADDOP term

   44 term: unary_expression
   45     | term MULOP unary_expression

   46 unary_expression: ADDOP unary_expression
   47                 | NOT unary_expression
   48                 | factor

   49 factor: variable
   50       | ID LPAREN argument_list RPAREN
   51       | LPAREN expression RPAREN
   52       | CONST_INT
   53       | CONST_FLOAT
   54       | variable INCOP

   55 argument_list: arguments

   56 arguments: arguments COMMA logic_expression
   57          | logic_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 27 28
    WHILE (259) 29
    FOR (260) 26
    ELSE (261) 28
    BREAK (262)
    DO (263)
    INT (264) 14
    FLOAT (265) 15
    VOID (266) 16
    SWITCH (267)
    DEFAULT (268)
    GOTO (269)
    CHAR (270)
    DOUBLE (271)
    RETURN (272) 31
    CASE (273)
    CONTINUE (274)
    PRINTF (275) 30
    CONST_INT (276) 18 20 52
    CONST_FLOAT (277) 53
    ID (278) 5 6 7 9 17 18 19 20 30 34 35 50
    ADDOP (279) 43 46
    MULOP (280) 45
    INCOP (281) 54
    RELOP (282) 41
    ASSIGNOP (283) 37
    LOGICOP (284) 39
    NOT (285) 47
    LPAREN (286) 5 6 26 27 28 29 30 50 51
    RPAREN (287) 5 6 26 27 28 29 30 50 51
    LCURL (288) 11 12
    RCURL (289) 11 12
    LTHIRD (290) 18 20 35
    RTHIRD (291) 18 20 35
    SEMICOLON (292) 13 30 31 32 33
    COLON (293)
    COMMA (294) 7 8 17 18 56


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    program (41)
        on left: 1 2
        on right: 0 1
    unit (42)
        on left: 3 4
        on right: 1 2
    func_definition (43)
        on left: 5 6
        on right: 4
    parameter_list (44)
        on left: 7 8 9 10
        on right: 5 7 8
    compound_statement (45)
        on left: 11 12
        on right: 5 6 25
    var_declaration (46)
        on left: 13
        on right: 3 23
    type_specifier (47)
        on left: 14 15 16
        on right: 5 6 7 8 9 10 13
    declaration_list (48)
        on left: 17 18 19 20
        on right: 13 17 18
    statements (49)
        on left: 21 22
        on right: 11 22
    statement (50)
        on left: 23 24 25 26 27 28 29 30 31
        on right: 21 22 26 27 28 29
    expression_statement (51)
        on left: 32 33
        on right: 24 26
    variable (52)
        on left: 34 35
        on right: 37 49 54
    expression (53)
        on left: 36 37
        on right: 26 27 28 29 31 33 35 51
    logic_expression (54)
        on left: 38 39
        on right: 36 37 56 57
    rel_expression (55)
        on left: 40 41
        on right: 38 39
    simple_expression (56)
        on left: 42 43
        on right: 40 41 43
    term (57)
        on left: 44 45
        on right: 42 43 45
    unary_expression (58)
        on left: 46 47 48
        on right: 44 45 46 47
    factor (59)
        on left: 49 50 51 52 53 54
        on right: 48
    argument_list (60)
        on left: 55
        on right: 50
    arguments (61)
        on left: 56 57
        on right: 55 56


State 0

    0 $accept: • program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    program          go to state 4
    unit             go to state 5
    func_definition  go to state 6
    var_declaration  go to state 7
    type_specifier   go to state 8


State 1

   14 type_specifier: INT •

    $default  reduce using rule 14 (type_specifier)


State 2

   15 type_specifier: FLOAT •

    $default  reduce using rule 15 (type_specifier)


State 3

   16 type_specifier: VOID •

    $default  reduce using rule 16 (type_specifier)


State 4

    0 $accept: program • $end
    1 program: program • unit

    $end   shift, and go to state 9
    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    unit             go to state 10
    func_definition  go to state 6
    var_declaration  go to state 7
    type_specifier   go to state 8


State 5

    2 program: unit •

    $default  reduce using rule 2 (program)


State 6

    4 unit: func_definition •

    $default  reduce using rule 4 (unit)


State 7

    3 unit: var_declaration •

    $default  reduce using rule 3 (unit)


State 8

    5 func_definition: type_specifier • ID LPAREN parameter_list RPAREN compound_statement
    6                | type_specifier • ID LPAREN RPAREN compound_statement
   13 var_declaration: type_specifier • declaration_list SEMICOLON

    ID  shift, and go to state 11

    declaration_list  go to state 12


State 9

    0 $accept: program $end •

    $default  accept


State 10

    1 program: program unit •

    $default  reduce using rule 1 (program)


State 11

    5 func_definition: type_specifier ID • LPAREN parameter_list RPAREN compound_statement
    6                | type_specifier ID • LPAREN RPAREN compound_statement
   19 declaration_list: ID •
   20                 | ID • LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 13
    LTHIRD  shift, and go to state 14

    $default  reduce using rule 19 (declaration_list)


State 12

   13 var_declaration: type_specifier declaration_list • SEMICOLON
   17 declaration_list: declaration_list • COMMA ID
   18                 | declaration_list • COMMA ID LTHIRD CONST_INT RTHIRD

    SEMICOLON  shift, and go to state 15
    COMMA      shift, and go to state 16


State 13

    5 func_definition: type_specifier ID LPAREN • parameter_list RPAREN compound_statement
    6                | type_specifier ID LPAREN • RPAREN compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 17

    parameter_list  go to state 18
    type_specifier  go to state 19


State 14

   20 declaration_list: ID LTHIRD • CONST_INT RTHIRD

    CONST_INT  shift, and go to state 20


State 15

   13 var_declaration: type_specifier declaration_list SEMICOLON •

    $default  reduce using rule 13 (var_declaration)


State 16

   17 declaration_list: declaration_list COMMA • ID
   18                 | declaration_list COMMA • ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 21


State 17

    6 func_definition: type_specifier ID LPAREN RPAREN • compound_statement

    LCURL  shift, and go to state 22

    compound_statement  go to state 23


State 18

    5 func_definition: type_specifier ID LPAREN parameter_list • RPAREN compound_statement
    7 parameter_list: parameter_list • COMMA type_specifier ID
    8               | parameter_list • COMMA type_specifier

    RPAREN  shift, and go to state 24
    COMMA   shift, and go to state 25


State 19

    9 parameter_list: type_specifier • ID
   10               | type_specifier •

    ID  shift, and go to state 26

    $default  reduce using rule 10 (parameter_list)


State 20

   20 declaration_list: ID LTHIRD CONST_INT • RTHIRD

    RTHIRD  shift, and go to state 27


State 21

   17 declaration_list: declaration_list COMMA ID •
   18                 | declaration_list COMMA ID • LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 28

    $default  reduce using rule 17 (declaration_list)


State 22

   11 compound_statement: LCURL • statements RCURL
   12                   | LCURL • RCURL

    IF           shift, and go to state 29
    WHILE        shift, and go to state 30
    FOR          shift, and go to state 31
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 32
    PRINTF       shift, and go to state 33
    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    LCURL        shift, and go to state 22
    RCURL        shift, and go to state 40
    SEMICOLON    shift, and go to state 41

    compound_statement    go to state 42
    var_declaration       go to state 43
    type_specifier        go to state 44
    statements            go to state 45
    statement             go to state 46
    expression_statement  go to state 47
    variable              go to state 48
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55


State 23

    6 func_definition: type_specifier ID LPAREN RPAREN compound_statement •

    $default  reduce using rule 6 (func_definition)


State 24

    5 func_definition: type_specifier ID LPAREN parameter_list RPAREN • compound_statement

    LCURL  shift, and go to state 22

    compound_statement  go to state 56


State 25

    7 parameter_list: parameter_list COMMA • type_specifier ID
    8               | parameter_list COMMA • type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 57


State 26

    9 parameter_list: type_specifier ID •

    $default  reduce using rule 9 (parameter_list)


State 27

   20 declaration_list: ID LTHIRD CONST_INT RTHIRD •

    $default  reduce using rule 20 (declaration_list)


State 28

   18 declaration_list: declaration_list COMMA ID LTHIRD • CONST_INT RTHIRD

    CONST_INT  shift, and go to state 58


State 29

   27 statement: IF • LPAREN expression RPAREN statement
   28          | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 59


State 30

   29 statement: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 60


State 31

   26 statement: FOR • LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 61


State 32

   31 statement: RETURN • expression SEMICOLON

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable           go to state 48
    expression         go to state 62
    logic_expression   go to state 50
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55


State 33

   30 statement: PRINTF • LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 63


State 34

   52 factor: CONST_INT •

    $default  reduce using rule 52 (factor)


State 35

   53 factor: CONST_FLOAT •

    $default  reduce using rule 53 (factor)


State 36

   34 variable: ID •
   35         | ID • LTHIRD expression RTHIRD
   50 factor: ID • LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 64
    LTHIRD  shift, and go to state 65

    $default  reduce using rule 34 (variable)


State 37

   46 unary_expression: ADDOP • unary_expression

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable          go to state 66
    unary_expression  go to state 67
    factor            go to state 55


State 38

   47 unary_expression: NOT • unary_expression

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable          go to state 66
    unary_expression  go to state 68
    factor            go to state 55


State 39

   51 factor: LPAREN • expression RPAREN

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable           go to state 48
    expression         go to state 69
    logic_expression   go to state 50
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55


State 40

   12 compound_statement: LCURL RCURL •

    $default  reduce using rule 12 (compound_statement)


State 41

   32 expression_statement: SEMICOLON •

    $default  reduce using rule 32 (expression_statement)


State 42

   25 statement: compound_statement •

    $default  reduce using rule 25 (statement)


State 43

   23 statement: var_declaration •

    $default  reduce using rule 23 (statement)


State 44

   13 var_declaration: type_specifier • declaration_list SEMICOLON

    ID  shift, and go to state 70

    declaration_list  go to state 12


State 45

   11 compound_statement: LCURL statements • RCURL
   22 statements: statements • statement

    IF           shift, and go to state 29
    WHILE        shift, and go to state 30
    FOR          shift, and go to state 31
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 32
    PRINTF       shift, and go to state 33
    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    LCURL        shift, and go to state 22
    RCURL        shift, and go to state 71
    SEMICOLON    shift, and go to state 41

    compound_statement    go to state 42
    var_declaration       go to state 43
    type_specifier        go to state 44
    statement             go to state 72
    expression_statement  go to state 47
    variable              go to state 48
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55


State 46

   21 statements: statement •

    $default  reduce using rule 21 (statements)


State 47

   24 statement: expression_statement •

    $default  reduce using rule 24 (statement)


State 48

   37 expression: variable • ASSIGNOP logic_expression
   49 factor: variable •
   54       | variable • INCOP

    INCOP     shift, and go to state 73
    ASSIGNOP  shift, and go to state 74

    $default  reduce using rule 49 (factor)


State 49

   33 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 75


State 50

   36 expression: logic_expression •

    $default  reduce using rule 36 (expression)


State 51

   38 logic_expression: rel_expression •
   39                 | rel_expression • LOGICOP rel_expression

    LOGICOP  shift, and go to state 76

    $default  reduce using rule 38 (logic_expression)


State 52

   40 rel_expression: simple_expression •
   41               | simple_expression • RELOP simple_expression
   43 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 77
    RELOP  shift, and go to state 78

    $default  reduce using rule 40 (rel_expression)


State 53

   42 simple_expression: term •
   45 term: term • MULOP unary_expression

    MULOP  shift, and go to state 79

    $default  reduce using rule 42 (simple_expression)


State 54

   44 term: unary_expression •

    $default  reduce using rule 44 (term)


State 55

   48 unary_expression: factor •

    $default  reduce using rule 48 (unary_expression)


State 56

    5 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement •

    $default  reduce using rule 5 (func_definition)


State 57

    7 parameter_list: parameter_list COMMA type_specifier • ID
    8               | parameter_list COMMA type_specifier •

    ID  shift, and go to state 80

    $default  reduce using rule 8 (parameter_list)


State 58

   18 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT • RTHIRD

    RTHIRD  shift, and go to state 81


State 59

   27 statement: IF LPAREN • expression RPAREN statement
   28          | IF LPAREN • expression RPAREN statement ELSE statement

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable           go to state 48
    expression         go to state 82
    logic_expression   go to state 50
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55


State 60

   29 statement: WHILE LPAREN • expression RPAREN statement

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable           go to state 48
    expression         go to state 83
    logic_expression   go to state 50
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55


State 61

   26 statement: FOR LPAREN • expression_statement expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    SEMICOLON    shift, and go to state 41

    expression_statement  go to state 84
    variable              go to state 48
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55


State 62

   31 statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 85


State 63

   30 statement: PRINTF LPAREN • ID RPAREN SEMICOLON

    ID  shift, and go to state 86


State 64

   50 factor: ID LPAREN • argument_list RPAREN

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable           go to state 66
    logic_expression   go to state 87
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55
    argument_list      go to state 88
    arguments          go to state 89


State 65

   35 variable: ID LTHIRD • expression RTHIRD

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable           go to state 48
    expression         go to state 90
    logic_expression   go to state 50
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55


State 66

   49 factor: variable •
   54       | variable • INCOP

    INCOP  shift, and go to state 73

    $default  reduce using rule 49 (factor)


State 67

   46 unary_expression: ADDOP unary_expression •

    $default  reduce using rule 46 (unary_expression)


State 68

   47 unary_expression: NOT unary_expression •

    $default  reduce using rule 47 (unary_expression)


State 69

   51 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 91


State 70

   19 declaration_list: ID •
   20                 | ID • LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 14

    $default  reduce using rule 19 (declaration_list)


State 71

   11 compound_statement: LCURL statements RCURL •

    $default  reduce using rule 11 (compound_statement)


State 72

   22 statements: statements statement •

    $default  reduce using rule 22 (statements)


State 73

   54 factor: variable INCOP •

    $default  reduce using rule 54 (factor)


State 74

   37 expression: variable ASSIGNOP • logic_expression

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable           go to state 66
    logic_expression   go to state 92
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55


State 75

   33 expression_statement: expression SEMICOLON •

    $default  reduce using rule 33 (expression_statement)


State 76

   39 logic_expression: rel_expression LOGICOP • rel_expression

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable           go to state 66
    rel_expression     go to state 93
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55


State 77

   43 simple_expression: simple_expression ADDOP • term

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable          go to state 66
    term              go to state 94
    unary_expression  go to state 54
    factor            go to state 55


State 78

   41 rel_expression: simple_expression RELOP • simple_expression

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable           go to state 66
    simple_expression  go to state 95
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55


State 79

   45 term: term MULOP • unary_expression

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable          go to state 66
    unary_expression  go to state 96
    factor            go to state 55


State 80

    7 parameter_list: parameter_list COMMA type_specifier ID •

    $default  reduce using rule 7 (parameter_list)


State 81

   18 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD •

    $default  reduce using rule 18 (declaration_list)


State 82

   27 statement: IF LPAREN expression • RPAREN statement
   28          | IF LPAREN expression • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 97


State 83

   29 statement: WHILE LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 98


State 84

   26 statement: FOR LPAREN expression_statement • expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    SEMICOLON    shift, and go to state 41

    expression_statement  go to state 99
    variable              go to state 48
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55


State 85

   31 statement: RETURN expression SEMICOLON •

    $default  reduce using rule 31 (statement)


State 86

   30 statement: PRINTF LPAREN ID • RPAREN SEMICOLON

    RPAREN  shift, and go to state 100


State 87

   57 arguments: logic_expression •

    $default  reduce using rule 57 (arguments)


State 88

   50 factor: ID LPAREN argument_list • RPAREN

    RPAREN  shift, and go to state 101


State 89

   55 argument_list: arguments •
   56 arguments: arguments • COMMA logic_expression

    COMMA  shift, and go to state 102

    $default  reduce using rule 55 (argument_list)


State 90

   35 variable: ID LTHIRD expression • RTHIRD

    RTHIRD  shift, and go to state 103


State 91

   51 factor: LPAREN expression RPAREN •

    $default  reduce using rule 51 (factor)


State 92

   37 expression: variable ASSIGNOP logic_expression •

    $default  reduce using rule 37 (expression)


State 93

   39 logic_expression: rel_expression LOGICOP rel_expression •

    $default  reduce using rule 39 (logic_expression)


State 94

   43 simple_expression: simple_expression ADDOP term •
   45 term: term • MULOP unary_expression

    MULOP  shift, and go to state 79

    $default  reduce using rule 43 (simple_expression)


State 95

   41 rel_expression: simple_expression RELOP simple_expression •
   43 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 77

    $default  reduce using rule 41 (rel_expression)


State 96

   45 term: term MULOP unary_expression •

    $default  reduce using rule 45 (term)


State 97

   27 statement: IF LPAREN expression RPAREN • statement
   28          | IF LPAREN expression RPAREN • statement ELSE statement

    IF           shift, and go to state 29
    WHILE        shift, and go to state 30
    FOR          shift, and go to state 31
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 32
    PRINTF       shift, and go to state 33
    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    LCURL        shift, and go to state 22
    SEMICOLON    shift, and go to state 41

    compound_statement    go to state 42
    var_declaration       go to state 43
    type_specifier        go to state 44
    statement             go to state 104
    expression_statement  go to state 47
    variable              go to state 48
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55


State 98

   29 statement: WHILE LPAREN expression RPAREN • statement

    IF           shift, and go to state 29
    WHILE        shift, and go to state 30
    FOR          shift, and go to state 31
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 32
    PRINTF       shift, and go to state 33
    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    LCURL        shift, and go to state 22
    SEMICOLON    shift, and go to state 41

    compound_statement    go to state 42
    var_declaration       go to state 43
    type_specifier        go to state 44
    statement             go to state 105
    expression_statement  go to state 47
    variable              go to state 48
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55


State 99

   26 statement: FOR LPAREN expression_statement expression_statement • expression RPAREN statement

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable           go to state 48
    expression         go to state 106
    logic_expression   go to state 50
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55


State 100

   30 statement: PRINTF LPAREN ID RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 107


State 101

   50 factor: ID LPAREN argument_list RPAREN •

    $default  reduce using rule 50 (factor)


State 102

   56 arguments: arguments COMMA • logic_expression

    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39

    variable           go to state 66
    logic_expression   go to state 108
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55


State 103

   35 variable: ID LTHIRD expression RTHIRD •

    $default  reduce using rule 35 (variable)


State 104

   27 statement: IF LPAREN expression RPAREN statement •
   28          | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 109

    $default  reduce using rule 27 (statement)


State 105

   29 statement: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 29 (statement)


State 106

   26 statement: FOR LPAREN expression_statement expression_statement expression • RPAREN statement

    RPAREN  shift, and go to state 110


State 107

   30 statement: PRINTF LPAREN ID RPAREN SEMICOLON •

    $default  reduce using rule 30 (statement)


State 108

   56 arguments: arguments COMMA logic_expression •

    $default  reduce using rule 56 (arguments)


State 109

   28 statement: IF LPAREN expression RPAREN statement ELSE • statement

    IF           shift, and go to state 29
    WHILE        shift, and go to state 30
    FOR          shift, and go to state 31
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 32
    PRINTF       shift, and go to state 33
    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    LCURL        shift, and go to state 22
    SEMICOLON    shift, and go to state 41

    compound_statement    go to state 42
    var_declaration       go to state 43
    type_specifier        go to state 44
    statement             go to state 111
    expression_statement  go to state 47
    variable              go to state 48
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55


State 110

   26 statement: FOR LPAREN expression_statement expression_statement expression RPAREN • statement

    IF           shift, and go to state 29
    WHILE        shift, and go to state 30
    FOR          shift, and go to state 31
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 32
    PRINTF       shift, and go to state 33
    CONST_INT    shift, and go to state 34
    CONST_FLOAT  shift, and go to state 35
    ID           shift, and go to state 36
    ADDOP        shift, and go to state 37
    NOT          shift, and go to state 38
    LPAREN       shift, and go to state 39
    LCURL        shift, and go to state 22
    SEMICOLON    shift, and go to state 41

    compound_statement    go to state 42
    var_declaration       go to state 43
    type_specifier        go to state 44
    statement             go to state 112
    expression_statement  go to state 47
    variable              go to state 48
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55


State 111

   28 statement: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 28 (statement)


State 112

   26 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement •

    $default  reduce using rule 26 (statement)
